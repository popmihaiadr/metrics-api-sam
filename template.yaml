# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  metrics-api-serverless

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: true
    Cors:
      AllowOrigin: "'https://metrics-playground.click/'"
      AllowHeaders: "'Content-Type'"
      AllowMethods: "'GET,POST,OPTIONS'"

Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-users.getAllUsersHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Policies:
       - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: "arn:aws:secretsmanager:us-east-1:337759669531:secret:rds!db-e7d46044-ec53-46d0-b2e1-cd26b6ff64de-UYcHTx"
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all users from
        a Postgres db.
     
      VpcConfig:
        SecurityGroupIds:
          - sg-050e13dd8cab462fe
        SubnetIds:
          - subnet-0f703fc3a483b865f
   

      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-by-id.js
  

  postUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/post-user.postUserHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Policies:
       - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: "arn:aws:secretsmanager:us-east-1:337759669531:secret:rds!db-e7d46044-ec53-46d0-b2e1-cd26b6ff64de-UYcHTx"
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one user to
        a postgres db.
      VpcConfig:
        SecurityGroupIds:
          - sg-050e13dd8cab462fe
        SubnetIds:
          - subnet-0f703fc3a483b865f
     
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

 

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      AutoConfigurationEnabled: 'true'
    DependsOn: ApplicationResourceGroup
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
